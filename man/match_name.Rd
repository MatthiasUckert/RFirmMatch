% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{match_name}
\alias{match_name}
\title{Full String Firm Names Matching}
\usage{
match_name(.table_firm, .table_match, .col_match)
}
\arguments{
\item{.table_firm}{A Dataframe generated by extract_legal_form()}

\item{.table_match}{A Dataframe generated by extract_legal_form()}

\item{.col_match}{The Matching Column}
}
\value{
A Dataframe with 14 columns:\cr
Columns 1-2: 'id_...' \<chr\>: Matched IDs of Firm/Match Tables\cr
Column 3: 'match' \<chr\>: Matched String\cr
Columns 4-5: 'name_...' \<chr\>: Full standardized name of Firm/Match Table\cr
Columns 6-7: 'country_code_...' \<chr\>: The Firm's/Matches' ISO 3166_2 Alpha 3 country code\cr
Columns 8-9: 'legal_form_...' \<chr\>: The Firm's/Matches' extracted Legal Form\cr
Column 10: 'same_country' \<lgl\>: Logical variable if Firm and Match are from the same country\cr
Column 11: 'same_legal_form' \<lgl\>: Logical variable if Firm and Match have the same legal form code\cr
Columns 12-13: 'n_id_...' \<int\>: Number of matched Firm/Match IDs\cr
Column 14: 'sim' \<num\>: String Similarity (Optimal String Alignment) of the match
}
\description{
Full String Firm Names Matching
}
\examples{
table_firm <- tibble::tibble(
 id = 1:2,
 country_code = c("DEU", NA),
  name1 = c("BASF AG", "BASF SE"),
  name2 = c("BASF Germany AG", "BASF Germany SE")
)
table_match <- tibble::tibble(
 id = 1:2,
 country_code = c("DEU", "DEU"),
  name1 = c("BASF Aktiengesellschaft", "BASF"),
  name2 = c("BASF Germany AG", "BASF Germany SE")
)
table_firm <- prepare_tables(table_firm, "firm")
table_match <- prepare_tables(table_match, "match")

.table_firm <- table_firm <- extract_legal_form(table_firm)
.table_match <- table_match <- extract_legal_form(table_match)

match1 <- match_name(table_firm, table_match, name)
match2 <- match_name(table_firm, table_match, name_adj)
}
